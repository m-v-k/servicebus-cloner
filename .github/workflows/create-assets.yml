name: Create Assets

# run: 
# git tag -a v0.2.4 -m "Test Release 0.2.4"
# git push origin v0.2.4

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  publish:
    name: Create assets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [ 'win-x64'] # , 'linux-x64', 'osx-x64', 'win-arm64', 'win-x86',  'linux-arm64', 'osx-arm64' ] save me some billing ;) 
    steps:

      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: DotNet Publish
        run: |
          cd src/ServicebusCloner
          dotnet publish -c Release -o ./artifacts \
            --runtime ${{ matrix.distribution }} \
            --self-contained true \
            -p:PublishTrimmed=true \
            -p:TrimMode=Link \
            -p:PublishSingleFile=true \
      
      - name: Zip
        run: |
          mkdir ./artifacts-zip
          zip -r ./artifacts-zip/servicebuscloner-${{ matrix.distribution }}.zip ./src/ServicebusCloner/artifacts

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dotnet-publish-${{ matrix.distribution }}
          path: ./artifacts-zip/
  
  release:
    needs: publish
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.SERVICEBUS_CLONER_CONTENTS_PAT }}
    
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

  assets:
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [ 'win-x64'] # , 'linux-x64', 'osx-x64', 'win-arm64', 'win-x86',  'linux-arm64', 'osx-arm64' ] save me some billing ;) 
    steps:

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: dotnet-publish-${{ matrix.distribution }}
        path: ./artifacts/

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./artifacts/servicebuscloner-${{ matrix.distribution }}.zip
        asset_name: servicebuscloner-${{ matrix.distribution }}.zip
        asset_content_type: application/zip
      env:
        GITHUB_TOKEN: ${{ secrets.SERVICEBUS_CLONER_CONTENTS_PAT }}
